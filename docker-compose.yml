version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: autobiz_saas
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: autobiz_secret_2024
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - autobiz_network

  # N8N Automation Platform
  n8n:
    image: n8nio/n8n:latest
    restart: unless-stopped
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin_n8n_2024
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=autobiz_saas
      - DB_POSTGRESDB_USER=postgres
      - DB_POSTGRESDB_PASSWORD=autobiz_secret_2024
      - EXECUTIONS_PROCESS=main
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-workflows:/home/node/workflows
    depends_on:
      - postgres
    networks:
      - autobiz_network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - autobiz_network

  # Backend API (Evolution API)
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:autobiz_secret_2024@postgres:5432/autobiz_saas
      - JWT_SECRET=ultra_secret_jwt_autobiz_2024
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - N8N_WEBHOOK_URL=http://n8n:5678/webhook
      - REDIS_URL=redis://redis:6379
    ports:
      - "3001:3001"
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - n8n
    networks:
      - autobiz_network

  # Frontend React App
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:3001
      - VITE_N8N_URL=http://localhost:5678
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - autobiz_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - api
      - n8n
    networks:
      - autobiz_network

  # PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@autobiz.com
      PGADMIN_DEFAULT_PASSWORD: admin_pg_2024
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - autobiz_network

volumes:
  postgres_data:
  n8n_data:
  redis_data:

networks:
  autobiz_network:
    driver: bridge
