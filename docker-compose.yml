version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: kryonix_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-kryonix_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-SuaSenhaSegura123}
      POSTGRES_DB: ${POSTGRES_DB:-kryonix}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-kryonix_user}"]
      interval: 30s
      timeout: 10s
      retries: 3

  n8n:
    image: n8nio/n8n:latest
    container_name: kryonix_n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-kryonix_user}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-SuaSenhaSegura123}
      - N8N_ENCRYPTION_KEY=kryonix-encryption-key-2024
      - WEBHOOK_URL=http://localhost:5678
      - GENERIC_TIMEZONE=America/Sao_Paulo
      - N8N_METRICS=true
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-workflows:/home/node/.n8n/workflows
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:5678/healthz || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    container_name: kryonix_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@kryonix.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: kryonix_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}

volumes:
  postgres_data:
    driver: local
  n8n_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: kryonix_network
