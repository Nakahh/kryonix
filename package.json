{
  "name": "kryonix-platform",
  "version": "1.0.0",
  "description": "Plataforma SaaS de Automação com IA - KRYONIX",
  "author": "Vitor Jayme Fernandes Ferreira <contato@kryonix.com>",
  "license": "Proprietary",
  "repository": {
    "type": "git",
    "url": "https://github.com/kryonix/platform.git"
  },
  "keywords": [
    "saas",
    "automation",
    "ai",
    "whatsapp",
    "n8n",
    "crm",
    "business"
  ],
  "scripts": {
    "install:all": "npm run install:server && npm run install:client",
    "install:server": "cd server && npm install",
    "install:client": "cd client && npm install",
    "build": "npm run build:client",
    "build:client": "cd client && npm run build",
    "dev": "concurrently \"npm run dev:server\" \"npm run dev:client\"",
    "dev:server": "cd server && npm run dev",
    "dev:client": "cd client && npm run dev",
    "start": "cd server && npm start",
    "deploy": "bash deploy.sh",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "db:generate": "cd server && npx prisma generate",
    "db:push": "cd server && npx prisma db push",
    "db:studio": "cd server && npx prisma studio",
    "db:migrate": "cd server && npx prisma migrate dev",
    "db:seed": "cd server && npx prisma db seed",
    "pm2:start": "pm2 start ecosystem.config.js",
    "pm2:stop": "pm2 stop all",
    "pm2:restart": "pm2 restart all",
    "pm2:logs": "pm2 logs",
    "pm2:status": "pm2 status",
    "health": "curl -f http://localhost:3001/api/ping || exit 1",
    "backup": "docker exec kryonix_postgres pg_dump -U kryonix_user kryonix > backups/backup_$(date +%Y%m%d_%H%M%S).sql",
    "restore": "docker exec -i kryonix_postgres psql -U kryonix_user -d kryonix < backups/$1",
    "test": "npm run test:server && npm run test:client",
    "test:server": "cd server && npm test",
    "test:client": "cd client && npm test",
    "lint": "npm run lint:server && npm run lint:client",
    "lint:server": "cd server && npm run lint",
    "lint:client": "cd client && npm run lint",
    "clean": "rm -rf node_modules client/node_modules server/node_modules client/dist",
    "update": "git pull && npm run install:all && npm run build && npm run pm2:restart"
  },
  "devDependencies": {
    "concurrently": "^8.2.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "os": [
    "linux",
    "darwin",
    "win32"
  ],
  "private": true,
  "workspaces": [
    "client",
    "server"
  ]
}
